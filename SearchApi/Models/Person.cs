/*
 *  
 *
 *  
 *
 * OpenAPI spec version: 1.0.0-dsep-draft
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.Net;
using static System.Net.Mime.MediaTypeNames;

namespace bpp.Models
{
    /// <summary>
    /// Describes a person.
    /// </summary>
    [DataContract]
    public partial class Person 
    {
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        // [RegularExpression(@"^\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$")]
        [DataMember(Name = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Image
        /// </summary>

        [DataMember(Name = "image")]
        public bpp.Models.Image Image { get; set; }

        /// <summary>
        /// Gets or Sets Dob
        /// </summary>

        [DataMember(Name = "dob")]
        public string Dob { get; set; }

        /// <summary>
        /// Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender
        /// </summary>
        /// <value>Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender</value>

        [DataMember(Name = "gender")]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets Cred
        /// </summary>

        [DataMember(Name = "creds")]
        public List<Credential> Creds { get; set; }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>

        [DataMember(Name = "tags")]
        public List<TagGroup> Tags { get; set; }

        ///// <summary>
        ///// Returns the string presentation of the object
        ///// </summary>
        ///// <returns>String presentation of the object</returns>
        //public override string ToString()
        //{
        //    var sb = new StringBuilder();
        //    sb.Append("class Person {\n");
        //    sb.Append("  Name: ").Append(Name).Append("\n");
        //    sb.Append("  Image: ").Append(Image).Append("\n");
        //    sb.Append("  Dob: ").Append(Dob).Append("\n");
        //    sb.Append("  Gender: ").Append(Gender).Append("\n");
        //    sb.Append("  Cred: ").Append(Cred).Append("\n");
        //    sb.Append("  Tags: ").Append(Tags).Append("\n");
        //    sb.Append("}\n");
        //    return sb.ToString();
        //}

      
    }
}
