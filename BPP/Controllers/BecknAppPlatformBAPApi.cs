///*
// * Beckn Core API
// *
// * Beckn Core API specification
// *
// * OpenAPI spec version: 1.0.0-dsep-draft
// * 
// * Generated by: https://github.com/swagger-api/swagger-codegen.git
// */
//using System;
//using System.Collections.Generic;
//using Microsoft.AspNetCore.Mvc;
//using Swashbuckle.AspNetCore.Annotations;
//using Swashbuckle.AspNetCore.SwaggerGen;
//using Newtonsoft.Json;
//using System.ComponentModel.DataAnnotations;
//using bpp.Attributes;
//using bpp.Security;
//using Microsoft.AspNetCore.Authorization;
//using bpp.Models;

//namespace bpp.Controllers
//{ 
//    /// <summary>
//    /// 
//    /// </summary>
//    [ApiController]
//    public class BecknAppPlatformBAPApiController : ControllerBase
//    {
//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Send cancellation request_id with reasons list in case of cancellation request. Else send cancelled order object</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        //[HttpPost]
//        //[Route("/on_cancel")]
//        //[Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        //[ValidateModelState]
//        //[SwaggerOperation("OnCancelPost")]
//        //[SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        //public virtual IActionResult OnCancelPost([FromBody] OnCancelBody body)
//        //{
//        //    //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//        //    // return StatusCode(200, default(InlineResponse200));
//        //    string exampleJson = null;
//        //    exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";

//        //    var example = exampleJson != null
//        //    ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//        //    : default(InlineResponse200);            //TODO: Change the data returned
//        //    return new ObjectResult(example);
//        //}

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Send active order object</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_confirm")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnConfirmPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnConfirmPost([FromBody]OnConfirmBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Send order object with payment details updated</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_init")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnInitPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnInitPost([FromBody]OnInitBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Provide feedback on a service</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_rating")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnRatingPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnRatingPost([FromBody]OnRatingBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Send catalog</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        //[HttpPost]
//        //[Route("/on_search")]
//        //[Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        //[ValidateModelState]
//        //[SwaggerOperation("OnSearchPost")]
//        //[SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2001), description: "Acknowledgement of message received")]
//        //public virtual IActionResult OnSearchPost([FromBody]OnSearchBody body)
//        //{ 
//        //    //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//        //    // return StatusCode(200, default(InlineResponse2001));
//        //    string exampleJson = null;
//        //    exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//        //                var example = exampleJson != null
//        //                ? JsonConvert.DeserializeObject<InlineResponse2001>(exampleJson)
//        //                : default(InlineResponse2001);            //TODO: Change the data returned
//        //    return new ObjectResult(example);
//        //}

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Send draft order object with quoted price for selected items</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_select")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnSelectPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnSelectPost([FromBody]OnSelectBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Fetch the status of a Service</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_status")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnStatusPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnStatusPost([FromBody]OnStatusBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Contact Support</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_support")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnSupportPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnSupportPost([FromBody]OnSupportBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Send tracking details of an active order</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_track")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnTrackPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnTrackPost([FromBody]OnTrackBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Returns updated service with updated runtime object</remarks>
//        /// <param name="body">TODO</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/on_update")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("OnUpdatePost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult OnUpdatePost([FromBody]OnUpdateBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }
//    }
//}
