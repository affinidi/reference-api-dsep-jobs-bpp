///*
// * Beckn Core API
// *
// * Beckn Core API specification
// *
// * OpenAPI spec version: 1.0.0-dsep-draft
// * 
// * Generated by: https://github.com/swagger-api/swagger-codegen.git
// */
//using System;
//using System.Collections.Generic;
//using Microsoft.AspNetCore.Mvc;
//using Swashbuckle.AspNetCore.Annotations;
//using Swashbuckle.AspNetCore.SwaggerGen;
//using Newtonsoft.Json;
//using System.ComponentModel.DataAnnotations;
//using bpp.Attributes;
//using bpp.Security;
//using Microsoft.AspNetCore.Authorization;
//using bpp.Models;

//namespace bpp.Controllers
//{ 
//    /// <summary>
//    /// 
//    /// </summary>
//    [ApiController]
//    public class BPPMetaAPIsApiController : ControllerBase
//    { 
//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Get cancellation reasons from the BPP</remarks>
//        /// <param name="body">Context header is sent as the request</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/get_cancellation_reasons")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("GetCancellationReasonsPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult GetCancellationReasonsPost([FromBody]GetCancellationReasonsBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Get a list of categories for which feedback can be given by the BAP</remarks>
//        /// <param name="body">Context header is sent as the request</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/get_feedback_categories")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("GetFeedbackCategoriesPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult GetFeedbackCategoriesPost([FromBody]GetFeedbackCategoriesBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Request a feedback form from the BPP</remarks>
//        /// <param name="body">The rating value and category is sent by the BAP</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/get_feedback_form")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("GetFeedbackFormPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult GetFeedbackFormPost([FromBody]GetFeedbackFormBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Get a list of categories that can be rated by the BAP</remarks>
//        /// <param name="body">Context header is sent as the request</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/get_rating_categories")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("GetRatingCategoriesPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult GetRatingCategoriesPost([FromBody]GetRatingCategoriesBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }

//        /// <summary>
//        /// 
//        /// </summary>
//        /// <remarks>Get return reasons from the BPP</remarks>
//        /// <param name="body">Context header is sent as the request</param>
//        /// <response code="200">Acknowledgement of message received</response>
//        [HttpPost]
//        [Route("/get_return_reasons")]
//        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
//        [ValidateModelState]
//        [SwaggerOperation("GetReturnReasonsPost")]
//        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Acknowledgement of message received")]
//        public virtual IActionResult GetReturnReasonsPost([FromBody]GetReturnReasonsBody body)
//        { 
//            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
//            // return StatusCode(200, default(InlineResponse200));
//            string exampleJson = null;
//            exampleJson = "{\n  \"message\" : {\n    \"ack\" : {\n      \"status\" : \"ACK\"\n    }\n  },\n  \"error\" : {\n    \"path\" : \"path\",\n    \"code\" : \"code\",\n    \"type\" : \"CONTEXT-ERROR\",\n    \"message\" : \"message\"\n  }\n}";
            
//                        var example = exampleJson != null
//                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
//                        : default(InlineResponse200);            //TODO: Change the data returned
//            return new ObjectResult(example);
//        }
//    }
//}
